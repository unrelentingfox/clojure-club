(ns clojure-club.playground.astar)

(def map-32x32x4
  ["################################"
   "#######################     ####"
   "######################       ###"
   "#####################        ###"
   "##################     ###  ####"
   "#################     ##########"
   "#################     ##########"
   "#################     ##########"
   "#####  ##########    ###########"
   "####    ##########  ############"
   "###      #######################"
   "###      #######################"
   "####    ########################"
   "#####################  #########"
   "####################    ########"
   "###################     ########"
   "##################     #########"
   "##################     #########"
   "#######   #####        #########"
   "#######               ##########"
   "#######           ##############"
   "######        ##################"
   "######    ########!#############"
   "#######   ######################"
   "################################"
   "################################"
   "##########   ###################"
   "#########     ##################"
   "##########    ##################"
   "###########    #################"
   "###########    #################"
   "############  ##################"])

(def goal \!)
(def clear \#)
(def blocked \space)
(def path \@)

(def closed
  [{:x 1 :y 2 :distance 40}])

(defn neighbors [[x y]]
  [[(inc x) y] [(dec x) y] [x (inc y)] [x (dec y)]])





(defn manh-dist [u v]
  (reduce +
          (map (fn [[a b]] (Math/abs (- a b)))
               (zipmap u v))))


(defn manh-path-px [[x1 y1] [x2 y2]]
  (set
    (concat
      (map (fn [x] [x y1]) (apply range (sort [x1 x2])))
      (map (fn [y] [x2 y]) (apply range (sort [y1 y2]))))))

(defn check-valid-state [[x y] terrain]
  (if (= (get (get map-32x32x4 y) x) clear)
    true
    false))

(defn solve [open closed terrain]

  )











































